#!/bin/sh

 RET=0
 server=
 dry_run=
 timeout=1
 template=
 transport="rsync"
 kdist_dir="$HOME/kdist"

 if [ ! -O "$kdist_dir" ] ; then
    printf "\n\e[1;31m kdist directory must exist, and be owned by user:\e[1;37m $kdist_dir/\e[0m\n\n"
    exit 1
 fi

 list_templates() {
    cd "$kdist_dir"
    printf "\e[0;38;5;203m Templates: "
    for X in * ; do
	if [ -d "$X/1-install" ] || [ -d "$X/2-transfer" ] ; then
	    printf "\e[1;38;5;33m$X\e[0m\n            "
	fi
    done
    echo
 }

##############################################################################################################################################################
###   parse command line options   ###########################################################################################################################
##############################################################################################################################################################

 while true ; do
    case "$1" in
	(--all)
	    EXECUTE="y"
	    INSTALL="y"
	    TRANSFER="y"
	    shift
	    ;;
	(--install)
	    INSTALL="y"
	    shift
	    ;;
	(--transfer )
	    TRANSFER="y"
	    shift
	    ;;
	(--port)
	    printf '\n\e[1;31m Error:\e[0m option \e[0;33m--port\e[0m needs a number: \e[0;33m--port=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--port=[0-9]*)
	    port="-p${1#*=}"
	    shift
	    ;;
	(--port=?*)
	    printf '\n\e[1;31m Error:\e[0m option \e[0;33m--port\e[0m needs a number: \e[0;33m--port=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--port=)
	    printf '\n\e[1;31m Error:\e[0m option \e[0;33m--port\e[0m needs a number: \e[0;33m--port=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--scp)
	    transport="scp"
	    shift
	    ;;
	(--timeout)
	    printf '\n\e[1;31m Error:\e[0m option \e[0;33m--timeout\e[0m needs a number: \e[0;33m--timeout=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--timeout=[0-9]*)
	    timeout=${1#*=}
	    shift
	    ;;
	(--timeout=?*)
	    printf '\n\e[1;31m Error:\e[0m option \e[0;33m--timeout\e[0m needs a number: \e[0;33m--timeout=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--timeout=)
	    printf '\n\e[1;31m Error:\e[0m option \e[0;33m--timeout\e[0m needs a number: \e[0;33m--timeout=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--dry-run)
	    dry_run='--dry-run'
	    shift
	    ;;
	(-?*)
	    printf "\n\e[1;31m Error:\e[0m Invalid option: \e[0;33m$1\e[0m\n\n"
	    exit 1
	    ;;
	("")
	    if [ -z "$template" ] ; then
		printf "\n\e[0;38;5;203m     Usage:\e[1;38;5;196m kdist \e[0;33m[ --all | --install | --transfer ]\e[0m server\e[1;38;5;33m template\e[0;33m --dry-run\e[0m\n\n"
		list_templates
		exit 0
	    fi
	    break
	    ;;
	([A-Za-z0-9_\.-]*)
	    if [ -z "$server" ] ; then
		server="$1"
	    elif [ -z "$template" ] ; then
		template="$1"
	    else
		printf "\n\e[1;31m redundant argument:\e[0m $1\n" >&2
		printf "server=$server\n"
		printf "template=$template\n"
		exit 1
	    fi
	    shift
	    ;;
	(*)
	    printf "\n\e[1;31m Error:\e[0m Not valid name for hostname or template: \e[1;31m$1\e[0m\n\n"
	    exit 1
	    ;;
    esac
 done

##############################################################################################################################################################
###   check if arguments make sense   ########################################################################################################################
##############################################################################################################################################################

 if [ ! -d "$kdist_dir/$template/1-install" ] && [ ! -d "$kdist_dir/$template/2-transfer" ] ; then
    printf "\n\e[1;31m     Error:\e[1;38;5;39m $template\e[0m is not a kdist template\n\n"
    list_templates
    exit 1
 fi

 if [ "scp" = "$transport" ] && [ "--dry-run" = "$dry_run" ] ; then
    printf "\n\e[1;31m Error:\e[0m scp transport does not support:\e[0;33m --dry-run\e[0m\n\n"
    exit 1
 fi

##############################################################################################################################################################
##############################################################################################################################################################
##############################################################################################################################################################

 dpkg_opts="-o DPkg::Options::=--force-confdef"
 ssh_opts="-o LogLevel=ERROR -o ConnectTimeout=$timeout -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes"

##############################################################################################################################################################
###   check if remote server has rsync installed   ###########################################################################################################
##############################################################################################################################################################

 output=$(ssh $port $ssh_opts root@$server "which rsync" 2>&1)

 case "$?" in
    (1)
	if [ "scp" != "$transport" ] ; then
	    if [ "--dry-run" != "$dry_run" ] ; then
		printf "\n\e[1;31m Warning:\e[0m ${output}, continuing in scp mode.\n\n" >&2
		transport="scp"
	    else
		printf "\n\e[1;31m Error:\e[0m ${output}.\n" >&2
		printf " Cannot continue. Option\e[0;33m --dry-run\e[0m requires rsync\n\n" >&2
		exit 1
	    fi
	fi
	;;
    (255)
	printf "\n\e[1;31m Error:\e[0m $output\n\n" >&2
	exit 1
	;;
    (*)
	break
	;;
 esac

##############################################################################################################################################################
###   execute "BEFORE" commands   ############################################################################################################################
##############################################################################################################################################################

 if [ "y" = "$EXECUTE" ] ; then
    if [ -d "$kdist_dir/$template/0-execute-before/" ] ; then
	files="$(ls $kdist_dir/$template/0-execute-before/)"
	if [ -n "$files" ] ; then

	    printf "\n\e[1;37m $server:\e[0;38;5;214m Executing 'BEFORE' commands:\e[1;37m $dry_run\e[0m\n"

	    ##################################################################################################################################################
	    for X in $files ; do #############################################################################################################################
	    ##################################################################################################################################################

		if [ "--dry-run" = "$dry_run" ] ; then
		    printf "\n\e[1;37m $server:\e[0m Following commands would be executed: \e[38;5;214m$X\e[0;33m\n\e[1;38;5;196m\n$(cat $kdist_dir/$template/0-execute-before/$X | sed -r -e '/^(#|$)/d' -e 's/^/    /')\e[0m\n"
		else
		    printf "\n\e[1;37m $server:\e[0m executing command: \e[0;38;5;214m$X\e[0;33m\n\e[1;38;5;196m\n$(cat $kdist_dir/$template/0-execute-before/$X | sed -r -e '/^(#|$)/d' -e 's/^/    /')\e[0m\n"

		    OUT=$(cat $kdist_dir/$template/0-execute-before/$X | ssh $port $ssh_opts root@$server 'sh' )
		    RET=$?

		    printf "\e[48;5;22m"
		    if [ $RET -eq 0 ] ; then
			printf "$OUT" | sed 's/^/    /'
			printf "\e[0m\n\n\e[1;37m $server:\e[0;33m command \e[1;37m$X \e[0;32m[\e[1;32mOK\e[0;32m]\e[0m\n"
		    else
			printf "$OUT" | sed 's/^/    /'
			printf "\e[0m\n\n\e[1;37m $server:\e[0;33m command \e[1;37m$X \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m\e[0m\n"
			RET=1
		    fi
		fi

	    ##################################################################################################################################################
	    done #############################################################################################################################################
	    ##################################################################################################################################################

	fi
    fi
 fi

##############################################################################################################################################################
###   install packages   #####################################################################################################################################
##############################################################################################################################################################

 if [ "y" = "$INSTALL" ] ; then
    if [ -d "$kdist_dir/$template/1-install/" ] ; then
	files="$(ls $kdist_dir/$template/1-install/)"
	if [ -n "$files" ] ; then
	    printf "\n\e[1;37m $server:\e[0;38;5;214m apt-get --quiet update\e[0m\n"
	    if ! ssh $port $ssh_opts root@$server "DEBIAN_FRONTEND=noninteractive apt-get --quiet update" | sed 's/^/   /' ; then
		printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m  apt-get --quiet update\e[0m\n\n"
		exit 1
	    fi

	    ##################################################################################################################################################
	    for X in $files ; do   ###########################################################################################################################
	    ##################################################################################################################################################

		packages="$(echo $(cat $kdist_dir/$template/1-install/$X | sed -r 's/([^#]*)#.*/\1/g'))" || exit 1 ;
		if [ -n "$packages" ] ; then
		    printf "\n\e[1;37m $server:\e[0;38;5;214m apt-get --no-install-recommends --quiet --yes install ${packages}\e[1;37m $dry_run\e[0m\n"
		    if ! ssh $port $ssh_opts root@$server "DEBIAN_FRONTEND=noninteractive apt-get $dpkg_opts --no-install-recommends --quiet --yes $dry_run install $packages" | sed 's/^/   /' ; then
			printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;38;5;214m  apt-get --no-install-recommends --quiet --yes $dry_run install $packages \e[0m\n\n"
			exit 1
		    fi
		fi

	    ##################################################################################################################################################
	    done   ###########################################################################################################################################
	    ##################################################################################################################################################

	else
	    INSTALL=""
	fi
    fi
 fi

##############################################################################################################################################################
###   transfer files   #######################################################################################################################################
##############################################################################################################################################################

 if [ "y" = "$TRANSFER" ] ; then
    if [ -d "$kdist_dir/$template/2-transfer/" ] && [ -n "$(ls $kdist_dir/$template/2-transfer/)" ] ; then

	# TRANSFER=RW if / was alredy rw, TRANSFER=RO if / was remounted
	if TRANSFER=$(ssh $port $ssh_opts root@$server '(if [ -w /etc ] ; then echo RW ; else mount -o remount,rw / ; echo RO ; fi)') ; then

	    printf "\n\e[1;37m $server:\e[0;38;5;214m Copying files ($transport):\e[1;37m $dry_run\e[0m\n\n"

	    ##################################################################################################################################################
	    if [ "scp" = "$transport" ] ; then   #############################################################################################################
	    ##################################################################################################################################################

		if ! scp $ssh_opts -rp ${port:+-P${port#-p}} $kdist_dir/$template/2-transfer/* root@$server:/ ; then
		    printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m scp\e[0m\n\n"
		    exit 1
		fi

	    ##################################################################################################################################################
	    else   ###########################################################################################################################################
	    ##################################################################################################################################################

		if ! { { { { rsync $dry_run --timeout=$timeout --info=name1,del2 --checksum -rlp --rsh="ssh -o StrictHostKeyChecking=no -l root $port" $kdist_dir/$template/2-transfer/* ${server}:/ ; echo $? >&3; } | sed -r 's@^([A-Za-z0-9/,._+-]+)@   \x1b[0;38;5;75m/\1\x1b[m@' >&4; } 3>&1; } | { read xs; exit $xs; } } 4>&1 ; then
		    printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m rsync\e[0m\n\n"
		    exit 1
		fi

	    ##################################################################################################################################################
	    fi   #############################################################################################################################################
	    ##################################################################################################################################################

	else
	    exit 1
	fi
    else
	TRANSFER=""
    fi
 fi

##############################################################################################################################################################
###   execute AFTER commands   ###############################################################################################################################
##############################################################################################################################################################

 if [ "y" = "$EXECUTE" ] ; then
    if [ -d "$kdist_dir/$template/3-execute-after/" ] ; then
	files="$(ls $kdist_dir/$template/3-execute-after/)"
	if [ -n "$files" ] ; then

	    printf "\n\e[1;37m $server:\e[0;38;5;214m Executing 'AFTER' commands:\e[1;37m $dry_run\e[0m\n"

	    ##################################################################################################################################################
	    for X in $files ; do #############################################################################################################################
	    ##################################################################################################################################################

		if [ "--dry-run" = "$dry_run" ] ; then
		    printf "\n\e[1;37m $server:\e[0m Following commands would be executed: \e[38;5;214m$X\e[0;33m\n\e[1;38;5;196m\n$(cat $kdist_dir/$template/3-execute-after/$X | sed -r -e '/^(#|$)/d' -e 's/^/    /')\e[0m\n"
		else
		    printf "\n\e[1;37m $server:\e[0m executing command: \e[0;38;5;214m$X\e[0;33m\n\e[1;38;5;196m\n$(cat $kdist_dir/$template/3-execute-after/$X | sed -r -e '/^(#|$)/d' -e 's/^/    /')\e[0m\n"

		    OUT=$(cat $kdist_dir/$template/3-execute-after/$X | ssh $port $ssh_opts root@$server 'sh' )
		    RET=$?

		    printf "\e[48;5;22m"
		    if [ $RET -eq 0 ] ; then
			printf "$OUT" | sed 's/^/    /'
			printf "\e[0m\n\n\e[1;37m $server:\e[0;33m command \e[1;37m$X \e[0;32m[\e[1;32mOK\e[0;32m]\e[0m\n"
		    else
			printf "$OUT" | sed 's/^/    /'
			printf "\e[0m\n\n\e[1;37m $server:\e[0;33m command \e[1;37m$X \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m\e[0m\n"
			RET=1
		    fi
		fi

	    ##################################################################################################################################################
	    done #############################################################################################################################################
	    ##################################################################################################################################################

	fi
    fi
 fi

##############################################################################################################################################################
###   remount / back to ro, if anythin was actually installed or transfered   ################################################################################
##############################################################################################################################################################

 # if / was ro originally, remount back to ro
 if [ "RO" = "$TRANSFER" ] ; then
    ssh $port $ssh_opts root@$server "mount -o remount /"
 fi

##############################################################################################################################################################
###   finish   ###############################################################################################################################################
##############################################################################################################################################################

 if [ $RET -eq 0 ] ; then
    printf "\n\e[1;37m $server: \e[0;32m[\e[1;32mOK\e[0;32m]\e[0m\n\n"
 else
    printf "\n\e[1;37m $server:\e[0m some actions returned error: \e[0;38;5;196m[\e[1;38;5;196mFailed\e[0;31m]\e[0;33m\e[0m\n\n"
 fi

