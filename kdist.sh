#!/bin/sh

################################################################################################################################################################
################################################################################################################################################################
################################################################################################################################################################

 server=
 dry_run=
 timeout=1
 template=
 transport="rsync"
 kdist_dir="$HOME/kdist"

 if [ ! -O "$kdist_dir" ] ; then
    printf "\n\e[1;31m kdist directory must exist, and be owned by user:\e[1;37m $kdist_dir/\e[0m\n\n"
    exit 1
 fi

################################################################################################################################################################
###   functions   ##############################################################################################################################################
################################################################################################################################################################

 list_templates() {
    cd "$kdist_dir"
    printf "\e[1;31m Templates: "
    for X in * ; do
	case "$X" in ([a-z]*) [ -d "$X/1-install" ] || [ -d "$X/2-transfer" ] && printf "\e[1;38;5;34m$X\e[0m\n            " ;; esac
    done
    echo
 }

 print_usage() {
    printf "\n\e[1;31m     Usage:\e[0m kdist \e[0;38;5;177m[--scp] [-i|--install-only] [-t|--transfer-only] [--port=NUM] [--timeout=NUM]\e[0;38;5;214m server template\e[0m\n\n"
 }

################################################################################################################################################################
###   parse command line options   #############################################################################################################################
################################################################################################################################################################

 while true ; do
    case "$1" in
	(-i|--install-only)
	    INSTALL="y"
	    shift
	    ;;
	(--port)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--port\e[0m needs an integer argument in the form of \e[1;31m--port=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--port=[0-9]*)
	    port="-p${1#*=}"
	    shift
	    ;;
	(--port=?*)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--port\e[0m needs an integer argument in the form of \e[1;31m--port=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--port=)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--port\e[0m needs an integer argument in the form of \e[1;31m--port=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--scp)
	    transport="scp"
	    shift
	    ;;
	(--timeout)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--timeout\e[0m needs an integer argument in the form of \e[1;31m--timeout=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--timeout=[0-9]*)
	    timeout=${1#*=}
	    shift
	    ;;
	(--timeout=?*)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--timeout\e[0m needs an integer argument in the form of \e[1;31m--timeout=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(--timeout=)
	    printf '\n\e[1;31m Error: \e[0;38;5;176m--timeout\e[0m needs an integer argument in the form of \e[1;31m--timeout=NUM\e[0m\n\n' >&2
	    exit 1
	    ;;
	(-t|--transfer-only )
	    TRANSFER="y"
	    shift
	    ;;
	(--dry-run)
	    dry_run='--dry-run'
	    shift
	    ;;
	(-?*)
	    printf "\n\e[1;31m Error:\e[0m Invalid option: \e[1;31m$1\e[0m\n\n"
	    exit 1
	    ;;
	("")
	    if [ -z "$template" ] ; then
		print_usage
		list_templates
		exit 1
	    fi
	    break
	    ;;
	([a-z0-9_\.-]*)
	    if [ -z "$server" ] ; then
		server="$1"
	    elif [ -z "$template" ] ; then
		template="$1"
	    else
		printf "\n\e[1;31m redundant argument:\e[0m $1\n" >&2
		printf "server=$server\n"
		printf "template=$template\n"
		exit 1
	    fi
	    shift
	    ;;
	(*)
	    printf "\n\e[1;31m Error:\e[0m Not valid name for hostname or template: \e[1;31m$1\e[0m\n\n"
	    exit 1
	    ;;
    esac
 done

################################################################################################################################################################
###   check if arguments make sense   ##########################################################################################################################
################################################################################################################################################################

 if [ ! -d "$kdist_dir/$template/1-install" ] && [ ! -d "$kdist_dir/$template/2-transfer" ] ; then
    printf "\n\e[1;31m     Error: \e[0;33m$template\e[0m is not a kdist template\n\n"
    list_templates
    exit 1
 fi

 dpkg_opts="-o DPkg::Options::=--force-confdef"
 ssh_opts="-o LogLevel=ERROR -o ConnectTimeout=$timeout -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes"

################################################################################################################################################################
###   if no action was specified explicitly, assume "install" and :transfer"   #################################################################################
################################################################################################################################################################

 if [ "y" != "$INSTALL" ] && [ "y" != "$TRANSFER" ] ; then
    EXECUTE="y"
    INSTALL="y"
    TRANSFER="y"
 fi

################################################################################################################################################################
###   check if remote server has rsync installed   #############################################################################################################
################################################################################################################################################################

 output=$(ssh $port $ssh_opts root@$server "which rsync" 2>&1)

 case "$?" in
    (1)
	if [ "scp" != "$transport" ] ; then
	    printf "\n\e[1;31m Warning:\e[0m ${output}, continuing in scp mode.\n\n" >&2
	    transport="scp"
	fi
	;;
    (255)
	printf "\n\e[1;31m Error:\e[0m $output\n\n" >&2
	exit 1
	;;
    (*)
	break
	;;
 esac

################################################################################################################################################################
###   execute "BEFORE" commands   ##############################################################################################################################
################################################################################################################################################################

 if [ "y" = "$EXECUTE" ] ; then
    if [ -d "$kdist_dir/$template/0-execute-before/" ] ; then
	files="$(ls $kdist_dir/$template/0-execute-before/)"
	if [ -n "$files" ] ; then
	    printf "\n\e[1;37m $server: \e[0;33mExecuting commands\e[0m\n"
	    for X in $files ; do

		################################################################################################################################################
		for command in "$(cat $kdist_dir/$template/0-execute-before/$X | sed '/^\s*$/d')" ; do   #######################################################
		################################################################################################################################################

		    OUT=$(ssh $port $ssh_opts root@$server "$command" 2>&1)

		    if [ $? -eq 0 ] ; then
			printf "\e[1;37m $server: \e[0;32m[\e[1;32mOK\e[0;32m]\e[0m \e[0;33m$command:\e[0m "
			printf "$OUT\n"
		    else
			printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m \e[0;33m$command:\e[0m "
			printf "$OUT\n\n"
			exit 1
		    fi

		################################################################################################################################################
		done   #########################################################################################################################################
		################################################################################################################################################

	    done
	fi
    fi
 fi

################################################################################################################################################################
###   install packages   #######################################################################################################################################
################################################################################################################################################################

 if [ "y" = "$INSTALL" ] ; then
    if [ -d "$kdist_dir/$template/1-install/" ] ; then
	files="$(ls $kdist_dir/$template/1-install/)"
	if [ -n "$files" ] ; then
	    printf "\n\e[1;37m $server: \e[0;33mapt-get --quiet update\e[0m\n"
	    if ! ssh $port $ssh_opts root@$server "DEBIAN_FRONTEND=noninteractive apt-get --quiet update" ; then
		printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m  apt-get --quiet update\e[0m\n\n"
		exit 1
	    fi

	    ####################################################################################################################################################
	    for X in $files ; do   ############################################################################################################################
	    ####################################################################################################################################################

		packages="$(echo $(cat $kdist_dir/$template/1-install/$X | sed -r 's/([^#]*)#.*/\1/g'))" || exit 1 ;
		if [ -n "$packages" ] ; then
		    printf "\e[1;37m $server: \e[0;33mapt-get --no-install-recommends --quiet --yes install $packages \e[0m\n"
		    if ! ssh $port $ssh_opts root@$server "DEBIAN_FRONTEND=noninteractive apt-get $dpkg_opts --no-install-recommends --quiet --yes install $packages" ; then
			printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m  apt-get --no-install-recommends --quiet --yes install $packages \e[0m\n\n"
			exit 1
		    fi
		fi

	    ####################################################################################################################################################
	    done   #############################################################################################################################################
	    ####################################################################################################################################################

	else
	    INSTALL=""
	fi
    fi
 fi

################################################################################################################################################################
###   transfer files   #########################################################################################################################################
################################################################################################################################################################

 if [ "y" = "$TRANSFER" ] ; then
    if [ -d "$kdist_dir/$template/2-transfer/" ] && [ -n "$(ls $kdist_dir/$template/2-transfer/)" ] ; then
	if ssh $port $ssh_opts root@$server "mount -o remount,rw /" ; then

	    ####################################################################################################################################################
	    if [ "scp" = "$transport" ] ; then   #####################################################################################################################
	    ####################################################################################################################################################

		printf "\n\e[1;37m $server: \e[0;33mCopying files ($transport)\e[0m\n\n"

		if ! scp $ssh_opts -rp ${port:+-P${port#-p}} $kdist_dir/$template/2-transfer/* root@$server:/ ; then
		    printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m scp\e[0m\n\n"
		    exit 1
		fi

	    ####################################################################################################################################################
	    else   #############################################################################################################################################
	    ####################################################################################################################################################

		if [ '--dry-run' = "$dry_run" ] ; then
		    printf "\n\e[1;37m $server: \e[0;33mCopying files ($transport)\e[1;37m  DRY RUN\e[0m\n\n"
		else
		    printf "\n\e[1;37m $server: \e[0;33mCopying files ($transport)\e[0m\n\n"
		fi

		if ! { { { { rsync $dry_run --timeout=$timeout --info=name1,del2 --checksum -rlp -AHX --rsh="ssh -o StrictHostKeyChecking=no -l root $port" $kdist_dir/$template/2-transfer/* ${server}:/ ; echo $? >&3; } | sed 's@^@ /@' >&4; } 3>&1; } | { read xs; exit $xs; } } 4>&1 ; then
		    printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m rsync\e[0m\n\n"
		    exit 1
		fi

	    ####################################################################################################################################################
	    fi   ###############################################################################################################################################
	    ####################################################################################################################################################

	else
	    exit 1
	fi
    else
	TRANSFER=""
    fi
 fi

################################################################################################################################################################
###   execute AFTER commands   #################################################################################################################################
################################################################################################################################################################

 if [ "y" = "$EXECUTE" ] ; then
    if [ -d "$kdist_dir/$template/3-execute-after/" ] ; then
	files="$(ls $kdist_dir/$template/3-execute-after/)"
	if [ -n "$files" ] ; then
	    printf "\n\e[1;37m $server: \e[0;33mExecuting commands\e[0m\n"
	    for X in $files ; do

		################################################################################################################################################
		for command in "$(cat $kdist_dir/$template/3-execute-after/$X | sed '/^\s*$/d')" ; do   #######################################################
		################################################################################################################################################

		    OUT=$(ssh $port $ssh_opts root@$server "$command" 2>&1)

		    if [ $? -eq 0 ] ; then
			printf "\e[1;37m $server: \e[0;32m[\e[1;32mOK\e[0;32m]\e[0m \e[0;33m$command:\e[0m "
			printf "$OUT\n"
		    else
			printf "\e[1;37m $server: \e[0;31m[\e[1;31mFailed\e[0;31m]\e[0;33m \e[0;33m$command:\e[0m "
			printf "$OUT\n\n"
			exit 1
		    fi

		################################################################################################################################################
		done   #########################################################################################################################################
		################################################################################################################################################

	    done
	fi
    fi
 fi

################################################################################################################################################################
###   remount / back to ro, if anythin was actually installed or transfered   ##################################################################################
################################################################################################################################################################

 if [ "y" = "$TRANSFER" ] ; then
    ssh $port $ssh_opts root@$server "mount -o remount /"
 fi

################################################################################################################################################################
###   finish   #################################################################################################################################################
################################################################################################################################################################

 printf "\n\e[1;37m $server: \e[0;32m[\e[1;32mOK\e[0;32m]\e[0m\n\n"

 exit 0

